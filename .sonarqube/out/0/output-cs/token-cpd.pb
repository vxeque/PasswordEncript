Ý
CD:\Sources\passwordBackendCsharp\PasswordEncript\WeatherForecast.cs
	namespace 	
passwordManagent2
 
{ 
public 

class 
WeatherForecast  
{ 
public 
DateOnly 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
TemperatureC 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
int		 
TemperatureF		 
=>		  "
$num		# %
+		& '
(		( )
int		) ,
)		, -
(		- .
TemperatureC		. :
/		; <
$num		= C
)		C D
;		D E
public 
string 
? 
Summary 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ¾0
OD:\Sources\passwordBackendCsharp\PasswordEncript\services\encryptionPassword.cs
	namespace 	
passwordManagent2
 
. 
services $
{ 
public 

class 
EncryptionPassword #
:$ %
IDisposable& 1
{		 
private

 
bool

 
disposed

 
=

 
false

  %
;

% &
public 
string 
Encrypt 
( 
string $
plainPassword% 2
,2 3
string4 :
key; >
)> ?
{ 	
byte 
[ 
] 

plainBytes 
= 
Encoding  (
.( )
UTF8) -
.- .
GetBytes. 6
(6 7
plainPassword7 D
)D E
;E F
byte 
[ 
] 
keyBytes 
= 
Encoding &
.& '
UTF8' +
.+ ,
GetBytes, 4
(4 5
key5 8
)8 9
;9 :
using 
( 
var 
aes 
= 
Aes  
.  !
Create! '
(' (
)( )
)) *
{ 
aes 
. 
Key 
= 
SHA256  
.  !
HashData! )
() *
keyBytes* 2
)2 3
;3 4
aes 
. 
IV 
= 
new 
byte !
[! "
$num" $
]$ %
;% &
using 
( 
var 
	encryptor $
=% &
aes' *
.* +
CreateEncryptor+ :
(: ;
aes; >
.> ?
Key? B
,B C
aesD G
.G H
IVH J
)J K
)K L
using 
( 
var 
ms 
= 
new  #
MemoryStream$ 0
(0 1
)1 2
)2 3
using 
( 
var 
cs 
= 
new  #
CryptoStream$ 0
(0 1
ms1 3
,3 4
	encryptor5 >
,> ?
CryptoStreamMode@ P
.P Q
WriteQ V
)V W
)W X
{ 
cs 
. 
Write 
( 

plainBytes '
,' (
$num) *
,* +

plainBytes, 6
.6 7
Length7 =
)= >
;> ?
cs 
. 
FlushFinalBlock &
(& '
)' (
;( )
return 
Convert "
." #
ToBase64String# 1
(1 2
ms2 4
.4 5
ToArray5 <
(< =
)= >
)> ?
;? @
} 
} 
} 	
public!! 
string!! 
Decrypt!! 
(!! 
string!! $
encryptedPassword!!% 6
,!!6 7
string!!8 >
key!!? B
)!!B C
{"" 	
byte## 
[## 
]## 
encryptedBytes## !
=##" #
Convert##$ +
.##+ ,
FromBase64String##, <
(##< =
encryptedPassword##= N
)##N O
;##O P
byte$$ 
[$$ 
]$$ 
keyBytes$$ 
=$$ 
Encoding$$ &
.$$& '
UTF8$$' +
.$$+ ,
GetBytes$$, 4
($$4 5
key$$5 8
)$$8 9
;$$9 :
using&& 
(&& 
var&& 
aes&& 
=&& 
Aes&&  
.&&  !
Create&&! '
(&&' (
)&&( )
)&&) *
{'' 
aes)) 
.)) 
Key)) 
=)) 
SHA256))  
.))  !
HashData))! )
())) *
keyBytes))* 2
)))2 3
;))3 4
aes** 
.** 
IV** 
=** 
new** 
byte** !
[**! "
$num**" $
]**$ %
;**% &
using,, 
(,, 
var,, 
	decryptor,, $
=,,% &
aes,,' *
.,,* +
CreateDecryptor,,+ :
(,,: ;
aes,,; >
.,,> ?
Key,,? B
,,,B C
aes,,D G
.,,G H
IV,,H J
),,J K
),,K L
using-- 
(-- 
var-- 
ms-- 
=-- 
new--  #
MemoryStream--$ 0
(--0 1
encryptedBytes--1 ?
)--? @
)--@ A
using.. 
(.. 
var.. 
cs.. 
=.. 
new..  #
CryptoStream..$ 0
(..0 1
ms..1 3
,..3 4
	decryptor..5 >
,..> ?
CryptoStreamMode..@ P
...P Q
Read..Q U
)..U V
)..V W
using// 
(// 
var// 
reader// !
=//" #
new//$ '
StreamReader//( 4
(//4 5
cs//5 7
)//7 8
)//8 9
{00 
return11 
reader11 !
.11! "
	ReadToEnd11" +
(11+ ,
)11, -
;11- .
}22 
}33 
}44 	
public66 
void66 
Dispose66 
(66 
)66 
{77 	
Dispose88 
(88 
true88 
)88 
;88 
GC99 
.99 
SuppressFinalize99 
(99  
this99  $
)99$ %
;99% &
}:: 	
	protected<< 
virtual<< 
void<< 
Dispose<< &
(<<& '
bool<<' +
	disposing<<, 5
)<<5 6
{== 	
if>> 
(>> 
!>> 
disposed>> 
&&>> 
	disposing>> &
)>>& '
{?? 
}AA 
disposedBB 
=BB 
trueBB 
;BB 
}CC 	
}DD 
}EE ø.
;D:\Sources\passwordBackendCsharp\PasswordEncript\Program.cs
var 
summary 
= 
BenchmarkRunner 
. 
Run !
<! "
BenchmarkClass" 0
>0 1
(1 2
)2 3
;3 4
Console 
. 
	WriteLine 
( 
$str )
)) *
;* +
var 
service 
= 
new 
passwordManagent2 #
.# $
services$ ,
., -
EncryptionPassword- ?
(? @
)@ A
;A B
var 
	encrypted 
= 
service 
. 
Encrypt 
(  
$str  (
,( )
$str* 2
)2 3
;3 4
Console 
. 
	WriteLine 
( 
$" 
$str 
{  
	encrypted  )
}) *
"* +
)+ ,
;, -
var 
	decrypted 
= 
service 
. 
Decrypt 
(  
	encrypted  )
,) *
$str+ 3
)3 4
;4 5
Console 
. 
	WriteLine 
( 
$" 
$str 
{  
	decrypted  )
}) *
"* +
)+ ,
;, -
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
if 
( 
! 
builder 
. 
Configuration 
. 

GetSection %
(% &
$str& ,
), -
.- .
Exists. 4
(4 5
)5 6
)6 7
{ 
builder 
. 
WebHost 
. 
UseUrls 
( 
$str 3
)3 4
;4 5
} 
builder"" 
."" 
Services"" 
."" 
AddCors"" 
("" 
options""  
=>""! #
{## 
options$$ 
.$$ 
	AddPolicy$$ 
($$ 
$str$$  
,$$  !
builder%% 
=>%% 
{&& 	
builder'' 
.'' 
AllowAnyOrigin'' "
(''" #
)''# $
.(( 
AllowAnyMethod(( "
(((" #
)((# $
.)) 
AllowAnyHeader)) "
())" #
)))# $
;))$ %
}** 	
)**	 

;**
 
}++ 
)++ 
;++ 
string.. 
dbPath.. 
=.. 
Path.. 
... 
Join.. 
(.. 
builder.. !
...! "
Environment.." -
...- .
ContentRootPath... =
,..= >
$str..? E
,..E F
$str..G O
)..O P
;..P Q
	Directory// 	
.//	 

CreateDirectory//
 
(// 
Path// 
.// 
GetDirectoryName// /
(/// 0
dbPath//0 6
)//6 7
)//7 8
;//8 9
builder00 
.00 
Services00 
.00 
AddDbContext00 
<00 "
PasswordManagerContext00 4
>004 5
(005 6
options006 =
=>00> @
options11 
.11 
	UseSqlite11 
(11 
$"11 
$str11 $
{11$ %
dbPath11% +
}11+ ,
"11, -
)11- .
)22 
;22 
builder44 
.44 
Services44 
.44 
AddControllers44 
(44  
)44  !
;44! "
builder55 
.55 
Services55 
.55 #
AddEndpointsApiExplorer55 (
(55( )
)55) *
;55* +
builder66 
.66 
Services66 
.66 
AddSwaggerGen66 
(66 
)66  
;66  !
var88 
app88 
=88 	
builder88
 
.88 
Build88 
(88 
)88 
;88 
if;; 
(;; 
app;; 
.;; 
Environment;; 
.;; 
IsDevelopment;; !
(;;! "
);;" #
);;# $
{<< 
app== 
.== 

UseSwagger== 
(== 
)== 
;== 
app>> 
.>> 
UseSwaggerUI>> 
(>> 
)>> 
;>> 
}?? 
usingBB 
(BB 
varBB 

scopeBB 
=BB 
appBB 
.BB 
ServicesBB 
.BB  
CreateScopeBB  +
(BB+ ,
)BB, -
)BB- .
{CC 
varDD 
contextDD 
=DD 
scopeDD 
.DD 
ServiceProviderDD '
.DD' (
GetRequiredServiceDD( :
<DD: ;"
PasswordManagerContextDD; Q
>DDQ R
(DDR S
)DDS T
;DDT U
contextEE 
.EE 
DatabaseEE 
.EE 
MigrateEE 
(EE 
)EE 
;EE 
}FF 
appII 
.II 
UseStaticFilesII 
(II 
)II 
;II 
appJJ 
.JJ 

UseRoutingJJ 
(JJ 
)JJ 
;JJ 
appKK 
.KK 
UseCorsKK 
(KK 
$strKK 
)KK 
;KK 
appMM 
.MM 
MapControllersMM 
(MM 
)MM 
;MM 
appPP 
.PP 
MapFallbackToFilePP 
(PP 
$strPP "
)PP" #
;PP# $
appRR 
.RR 
RunRR 
(RR 
)RR 	
;RR	 
N
LD:\Sources\passwordBackendCsharp\PasswordEncript\PasswordServiceBenchmark.cs©	
QD:\Sources\passwordBackendCsharp\PasswordEncript\Models\PasswordManagerContext.cs
	namespace 	
passwordManagent2
 
. 
Models "
{ 
public 

class "
PasswordManagerContext '
:( )
	DbContext* 3
{ 
private 
readonly 
IConfiguration '
_configuration( 6
;6 7
public "
PasswordManagerContext %
(% &
DbContextOptions& 6
<6 7"
PasswordManagerContext7 M
>M N
optionsO V
,V W
IConfigurationX f
configurationg t
)t u
:v w
basex |
(| }
options	} 
)
 
{		 	
_configuration

 
=

 
configuration

 *
;

* +
} 	
public 
DbSet 
< 
PasswordEntry "
>" #
passwordEntry$ 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
=@ A
nullB F
;F G
} 
} »
HD:\Sources\passwordBackendCsharp\PasswordEncript\Models\passwordEntry.cs
	namespace 	
passwordManagent2
 
. 
Models "
{ 
public 

class 
PasswordEntry 
{ 
public 
long 
Id 
{ 
get 
; 
set !
;! "
}# $
public 
string 
SiteName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public		 
string		 
UserName		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public

 
string

 
Encryptedpassword

 '
{

( )
get

* -
;

- .
set

/ 2
;

2 3
}

4 5
public 
string 
? 
Note 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
? 
Url 
{ 
get  
;  !
set" %
;% &
}' (
public 
DateTime 

CreateDate "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
DateTime 

UpdateDate "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
string 
SecurityStatus $
{% &
get' *
;* +
set, /
;/ 0
}1 2
} 
} Ú"
[D:\Sources\passwordBackendCsharp\PasswordEncript\Migrations\20241110013007_InitialCreate.cs
	namespace 	
passwordManagent2
 
. 

Migrations &
{ 
public		 

partial		 
class		 
InitialCreate		 &
:		' (
	Migration		) 2
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str %
,% &
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
long& *
>* +
(+ ,
type, 0
:0 1
$str2 ;
,; <
nullable= E
:E F
falseG L
)L M
. 

Annotation #
(# $
$str$ :
,: ;
true< @
)@ A
,A B
SiteName 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: @
,@ A
nullableB J
:J K
falseL Q
)Q R
,R S
UserName 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: @
,@ A
nullableB J
:J K
falseL Q
)Q R
,R S
Encryptedpassword %
=& '
table( -
.- .
Column. 4
<4 5
string5 ;
>; <
(< =
type= A
:A B
$strC I
,I J
nullableK S
:S T
falseU Z
)Z [
,[ \
Note 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 <
,< =
nullable> F
:F G
trueH L
)L M
,M N
Url 
= 
table 
.  
Column  &
<& '
string' -
>- .
(. /
type/ 3
:3 4
$str5 ;
,; <
nullable= E
:E F
trueG K
)K L
,L M

CreateDate 
=  
table! &
.& '
Column' -
<- .
DateTime. 6
>6 7
(7 8
type8 <
:< =
$str> D
,D E
nullableF N
:N O
falseP U
)U V
,V W

UpdateDate 
=  
table! &
.& '
Column' -
<- .
DateTime. 6
>6 7
(7 8
type8 <
:< =
$str> D
,D E
nullableF N
:N O
falseP U
)U V
,V W
SecurityStatus "
=# $
table% *
.* +
Column+ 1
<1 2
string2 8
>8 9
(9 :
type: >
:> ?
$str@ F
,F G
nullableH P
:P Q
falseR W
)W X
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 7
,7 8
x9 :
=>; =
x> ?
.? @
Id@ B
)B C
;C D
}   
)   
;   
}!! 	
	protected$$ 
override$$ 
void$$ 
Down$$  $
($$$ %
MigrationBuilder$$% 5
migrationBuilder$$6 F
)$$F G
{%% 	
migrationBuilder&& 
.&& 
	DropTable&& &
(&&& '
name'' 
:'' 
$str'' %
)''% &
;''& '
}(( 	
})) 
}** 9
YD:\Sources\passwordBackendCsharp\PasswordEncript\Controllers\PasswordEntriesController.cs
	namespace 	
passwordManagent2
 
. 
Controllers '
{		 
[

 
Route

 

(


 
$str

 
)

 
]

 
[ 
ApiController 
] 
public 

class %
PasswordEntriesController *
:+ ,
ControllerBase- ;
{ 
private 
readonly "
PasswordManagerContext /
_context0 8
;8 9
private 
readonly 
EncryptionPassword +
encryptionPassword, >
=? @
newA D
EncryptionPasswordE W
(W X
)X Y
;Y Z
public %
PasswordEntriesController (
(( )"
PasswordManagerContext) ?
context@ G
)G H
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
public 
async 
Task 
< 
ActionResult &
<& '
IEnumerable' 2
<2 3
PasswordEntry3 @
>@ A
>A B
>B C
GetpasswordEntryD T
(T U
)U V
{ 	
return 
await 
_context !
.! "
passwordEntry" /
./ 0
ToListAsync0 ;
(; <
)< =
;= >
} 	
[ 	
HttpGet	 
( 
$str 
) 
] 
public 
async 
Task 
< 
ActionResult &
<& '
PasswordEntry' 4
>4 5
>5 6
GetPasswordEntry7 G
(G H
longH L
idM O
)O P
{   	
var!! 
passwordEntry!! 
=!! 
await!!  %
_context!!& .
.!!. /
passwordEntry!!/ <
.!!< =
	FindAsync!!= F
(!!F G
id!!G I
)!!I J
;!!J K
Console"" 
."" 
	WriteLine"" 
("" 
passwordEntry"" +
?""+ ,
."", -
Encryptedpassword""- >
)""> ?
;""? @
if$$ 
($$ 
passwordEntry$$ 
==$$  
null$$! %
)$$% &
{%% 
return&& 
NotFound&& 
(&&  
)&&  !
;&&! "
}'' 
return)) 
passwordEntry))  
;))  !
}** 	
[.. 	
HttpPut..	 
(.. 
$str.. 
).. 
].. 
public// 
async// 
Task// 
<// 
IActionResult// '
>//' (
PutPasswordEntry//) 9
(//9 :
long//: >
id//? A
,//A B
PasswordEntry//C P
passwordEntry//Q ^
)//^ _
{00 	
if11 
(11 
id11 
!=11 
passwordEntry11 #
.11# $
Id11$ &
)11& '
{22 
return33 

BadRequest33 !
(33! "
)33" #
;33# $
}44 
_context66 
.66 
Entry66 
(66 
passwordEntry66 (
)66( )
.66) *
State66* /
=660 1
EntityState662 =
.66= >
Modified66> F
;66F G
try88 
{99 
await;; 
_context;; 
.;; 
SaveChangesAsync;; /
(;;/ 0
);;0 1
;;;1 2
}<< 
catch== 
(== (
DbUpdateConcurrencyException== /
)==/ 0
{>> 
if@@ 
(@@ 
!@@ 
PasswordEntryExists@@ (
(@@( )
id@@) +
)@@+ ,
)@@, -
{AA 
returnBB 
NotFoundBB #
(BB# $
)BB$ %
;BB% &
}CC 
elseDD 
{EE 
throwFF 
;FF 
}GG 
}HH 
returnJJ 
	NoContentJJ 
(JJ 
)JJ 
;JJ 
}KK 	
[OO 	
HttpPostOO	 
]OO 
publicPP 
asyncPP 
TaskPP 
<PP 
ActionResultPP &
<PP& '
PasswordEntryPP' 4
>PP4 5
>PP5 6
PostPasswordEntryPP7 H
(PPH I
PasswordEntryPPI V
passwordEntryPPW d
)PPd e
{QQ 	
passwordEntrySS 
.SS 
EncryptedpasswordSS +
=SS, -
encryptionPasswordSS. @
.SS@ A
EncryptSSA H
(SSH I
passwordEntrySSI V
.SSV W
EncryptedpasswordSSW h
,SSh i
$strSSj r
)SSr s
;SSs t
_contextUU 
.UU 
passwordEntryUU "
.UU" #
AddUU# &
(UU& '
passwordEntryUU' 4
)UU4 5
;UU5 6
awaitVV 
_contextVV 
.VV 
SaveChangesAsyncVV +
(VV+ ,
)VV, -
;VV- .
returnXX 
CreatedAtActionXX "
(XX" #
$strXX# 5
,XX5 6
newXX7 :
{XX; <
idXX= ?
=XX@ A
passwordEntryXXB O
.XXO P
IdXXP R
}XXS T
,XXT U
passwordEntryXXV c
)XXc d
;XXd e
}YY 	
[\\ 	

HttpDelete\\	 
(\\ 
$str\\ 
)\\ 
]\\ 
public]] 
async]] 
Task]] 
<]] 
IActionResult]] '
>]]' (
DeletePasswordEntry]]) <
(]]< =
long]]= A
id]]B D
)]]D E
{^^ 	
var__ 
passwordEntry__ 
=__ 
await__  %
_context__& .
.__. /
passwordEntry__/ <
.__< =
	FindAsync__= F
(__F G
id__G I
)__I J
;__J K
if`` 
(`` 
passwordEntry`` 
==``  
null``! %
)``% &
{aa 
returnbb 
NotFoundbb 
(bb  
)bb  !
;bb! "
}cc 
_contextee 
.ee 
passwordEntryee "
.ee" #
Removeee# )
(ee) *
passwordEntryee* 7
)ee7 8
;ee8 9
awaitff 
_contextff 
.ff 
SaveChangesAsyncff +
(ff+ ,
)ff, -
;ff- .
returnhh 
	NoContenthh 
(hh 
)hh 
;hh 
}ii 	
privatekk 
boolkk 
PasswordEntryExistskk (
(kk( )
longkk) -
idkk. 0
)kk0 1
{ll 	
returnmm 
_contextmm 
.mm 
passwordEntrymm )
.mm) *
Anymm* -
(mm- .
emm. /
=>mm0 2
emm3 4
.mm4 5
Idmm5 7
==mm8 :
idmm; =
)mm= >
;mm> ?
}nn 	
}oo 
}pp Ë
HD:\Sources\passwordBackendCsharp\PasswordEncript\Benchmarks\Benchmark.cs
	namespace 	
passwordManagent2
 
. 
	Benchmark %
{ 
[ 
MemoryDiagnoser 
] 
[ 

RankColumn 
] 
public

 

class

 
BenchmarkClass

 
{ 
private 
EncryptionPassword "
?" #
_encryptionService$ 6
;6 7
private 
string 
_encryptedPassword )
=* +
string, 2
.2 3
Empty3 8
;8 9
private 
const 
string 
TestPassword )
=* +
$str, 4
;4 5
private 
const 
string 
TestKey $
=% &
$str' /
;/ 0
[ 	
GlobalSetup	 
] 
public 
void 
Setup 
( 
) 
{ 	
_encryptionService 
=  
new! $
EncryptionPassword% 7
(7 8
)8 9
;9 :
_encryptedPassword 
=  
_encryptionService! 3
.3 4
Encrypt4 ;
(; <
TestPassword< H
,H I
TestKeyJ Q
)Q R
;R S
} 	
[ 	
GlobalCleanup	 
] 
public 
void 
Cleanup 
( 
) 
{ 	
_encryptionService 
? 
.  
Dispose  '
(' (
)( )
;) *
} 	
[ 	
	Benchmark	 
( 
Baseline 
= 
true "
)" #
]# $
public   
string   
EncryptPassword   %
(  % &
)  & '
{!! 	
return"" 
_encryptionService"" %
!""% &
.""& '
Encrypt""' .
("". /
TestPassword""/ ;
,""; <
TestKey""= D
)""D E
;""E F
}## 	
[%% 	
	Benchmark%%	 
]%% 
public&& 
string&& 
DecryptPassword&& %
(&&% &
)&&& '
{'' 	
return(( 
_encryptionService(( %
!((% &
.((& '
Decrypt((' .
(((. /
_encryptedPassword((/ A
,((A B
TestKey((C J
)((J K
;((K L
})) 	
[,, 	
	Benchmark,,	 
],, 
public-- 
string-- 
EncryptDecryptCycle-- )
(--) *
)--* +
{.. 	
string// 
	encrypted// 
=// 
_encryptionService// 1
!//1 2
.//2 3
Encrypt//3 :
(//: ;
TestPassword//; G
,//G H
TestKey//I P
)//P Q
;//Q R
return00 
_encryptionService00 %
.00% &
Decrypt00& -
(00- .
	encrypted00. 7
,007 8
TestKey009 @
)00@ A
;00A B
}11 	
}22 
}33 